Python module search:
When a module named spam is imported, the interpreter first searches for a built-in module with that name. If not found,
it then searches for a file named spam.py in a list of directories given by the variable sys.path. sys.path is
initialized from these locations:

    the directory containing the input script (or the current directory).
    PYTHONPATH (a list of directory names, with the same syntax as the shell variable PATH).
    the installation-dependent default.

After initialization, Python programs can modify sys.path.
The directory containing the script being run i.e. CWD is placed at the beginning of the search path,
ahead of the standard library path.
This means that scripts in that directory will be loaded instead of modules of the same name in the library directory.
This is an error unless the replacement is intended. See section Standard Modules for more information.


Python  3.X interprets the import in the first file as absolute and skips the package,
but 2.X does not.
Absoulte means from sys.path
Relative means from the pacakge directory.

To look from a file i.e. import a module from the same package in python 3
the only possibility is to use thr from . relative form "from . import the_sibling_module".
Python 2 does it by default then goes to sys.path.
The relative form i.e. dot only works with the from form.

It'sanother example of the incompatible behavior in 3.X